#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Generates an SSH config file for connections if a config var exists.

ENV_DIR=$3

function ensure_ssh_folder() {
  if [ ! -d ~/.ssh ]; then
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
  fi
}

function configure_ssh_key() {
  key_file=~/.ssh/custom_key_$2
  # Load the private key into custom_key file.
  echo $1 | base64 --decode > $key_file

  # Change the permissions on the file to
  # be read-only for this user.
  chmod 400 $key_file

  IFS=',' ;for host in `cat $ENV_DIR/CUSTOM_SSH_KEY_HOSTS`;
  do
    echo -e "Host $host\n"\
            "  IdentityFile $key_file\n"\
            "  IdentitiesOnly yes\n"\
            "  UserKnownHostsFile=/dev/null\n"\
            "  StrictHostKeyChecking no"\
            >> ~/.ssh/config
  done
}

if [[ -f $ENV_DIR/CUSTOM_SSH_KEYS && -f $ENV_DIR/CUSTOM_SSH_KEY_HOSTS ]]; then

  echo "" >&1

  # Ensure we have an ssh folder
  ensure_ssh_folder

  key_index=1
  IFS=',' ;for base64_key in `cat $ENV_DIR/CUSTOM_SSH_KEYS`;
  do
    configure_ssh_key $base64_key $key_index
    ((key_index++))
  done

  echo "-----> Successfully added $((key_index - 1)) custom SSH keys"

fi
